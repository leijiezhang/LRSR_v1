%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 10 ×¨Òµ°æ.
%%Title: H:\Workplace\matlab\LRSR_result\obj_trend\PIE_LPP_obj_trend.eps
%%CreationDate: 10/20/2017  20:04:17
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    -2   232   598   608
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    -2   232   598   608
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0024 7296 csm

    0     0  7206  4502 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7207 4503 rf
6 w
0 3669 5584 0 0 -3669 937 4007 4 MP
PP
-5584 0 0 3669 5584 0 0 -3669 937 4007 5 MP stroke
4 w
DO
0 sg
 937 4007 mt  937  338 L
 937  338 mt  937  338 L
1495 4007 mt 1495  338 L
1495  338 mt 1495  338 L
2053 4007 mt 2053  338 L
2053  338 mt 2053  338 L
2612 4007 mt 2612  338 L
2612  338 mt 2612  338 L
3170 4007 mt 3170  338 L
3170  338 mt 3170  338 L
3729 4007 mt 3729  338 L
3729  338 mt 3729  338 L
4287 4007 mt 4287  338 L
4287  338 mt 4287  338 L
4845 4007 mt 4845  338 L
4845  338 mt 4845  338 L
5404 4007 mt 5404  338 L
5404  338 mt 5404  338 L
5962 4007 mt 5962  338 L
5962  338 mt 5962  338 L
6521 4007 mt 6521  338 L
6521  338 mt 6521  338 L
 937 4007 mt 6521 4007 L
6521 4007 mt 6521 4007 L
 937 3482 mt 6521 3482 L
6521 3482 mt 6521 3482 L
 937 2958 mt 6521 2958 L
6521 2958 mt 6521 2958 L
 937 2434 mt 6521 2434 L
6521 2434 mt 6521 2434 L
 937 1910 mt 6521 1910 L
6521 1910 mt 6521 1910 L
 937 1386 mt 6521 1386 L
6521 1386 mt 6521 1386 L
 937  862 mt 6521  862 L
6521  862 mt 6521  862 L
 937  338 mt 6521  338 L
6521  338 mt 6521  338 L
SO
6 w
 937  338 mt 6521  338 L
 937 4007 mt 6521 4007 L
6521 4007 mt 6521  338 L
 937 4007 mt  937  338 L
 937 4007 mt 6521 4007 L
 937 4007 mt  937  338 L
 937 4007 mt  937 3951 L
 937  338 mt  937  393 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 897 4175 mt 
(0) s
1495 4007 mt 1495 3951 L
1495  338 mt 1495  393 L
1415 4175 mt 
(20) s
2053 4007 mt 2053 3951 L
2053  338 mt 2053  393 L
1973 4175 mt 
(40) s
2612 4007 mt 2612 3951 L
2612  338 mt 2612  393 L
2532 4175 mt 
(60) s
3170 4007 mt 3170 3951 L
3170  338 mt 3170  393 L
3090 4175 mt 
(80) s
3729 4007 mt 3729 3951 L
3729  338 mt 3729  393 L
3609 4175 mt 
(100) s
4287 4007 mt 4287 3951 L
4287  338 mt 4287  393 L
4167 4175 mt 
(120) s
4845 4007 mt 4845 3951 L
4845  338 mt 4845  393 L
4725 4175 mt 
(140) s
5404 4007 mt 5404 3951 L
5404  338 mt 5404  393 L
5284 4175 mt 
(160) s
5962 4007 mt 5962 3951 L
5962  338 mt 5962  393 L
5842 4175 mt 
(180) s
6521 4007 mt 6521 3951 L
6521  338 mt 6521  393 L
6401 4175 mt 
(200) s
 937 4007 mt  992 4007 L
6521 4007 mt 6465 4007 L
 702 4060 mt 
(1.5) s
 937 3482 mt  992 3482 L
6521 3482 mt 6465 3482 L
 622 3535 mt 
(1.52) s
 937 2958 mt  992 2958 L
6521 2958 mt 6465 2958 L
 622 3011 mt 
(1.54) s
 937 2434 mt  992 2434 L
6521 2434 mt 6465 2434 L
 622 2487 mt 
(1.56) s
 937 1910 mt  992 1910 L
6521 1910 mt 6465 1910 L
 622 1963 mt 
(1.58) s
 937 1386 mt  992 1386 L
6521 1386 mt 6465 1386 L
 702 1439 mt 
(1.6) s
 937  862 mt  992  862 L
6521  862 mt 6465  862 L
 622  915 mt 
(1.62) s
 937  338 mt  992  338 L
6521  338 mt 6465  338 L
 622  391 mt 
(1.64) s
 937  338 mt 6521  338 L
 937 4007 mt 6521 4007 L
6521 4007 mt 6521  338 L
 937 4007 mt  937  338 L
gs 937 338 5585 3670 rc
18 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
28 0 28 1 28 0 28 0 28 0 28 0 28 1 28 0 
28 0 28 1 27 0 28 0 28 0 28 1 28 0 28 0 
28 1 28 0 28 0 28 0 28 1 28 0 27 0 28 1 
28 0 28 0 28 1 28 0 28 0 28 1 28 0 28 0 
28 1 28 0 28 1 27 0 28 0 28 1 28 0 28 1 
28 0 28 0 28 1 28 0 28 1 28 0 28 1 27 0 
28 1 28 0 28 1 28 0 28 1 28 0 28 1 28 0 
28 1 28 0 28 1 28 1 27 0 28 1 28 0 28 1 
28 1 28 0 28 1 28 1 28 0 28 1 28 1 28 0 
27 1 28 1 28 1 28 0 28 1 28 1 28 1 28 1 
28 0 28 1 28 1 28 1 28 1 27 1 28 1 28 1 
28 1 28 1 28 1 28 1 28 1 28 1 28 1 28 1 
28 2 27 1 28 1 28 1 28 2 28 1 28 1 28 2 
28 1 28 1 28 2 28 1 28 2 28 2 27 1 28 2 
28 2 28 1 28 2 28 2 28 2 28 2 28 2 28 2 
28 2 28 2 27 2 28 2 28 3 28 2 28 2 28 3 
28 3 28 2 28 3 28 3 28 3 28 3 28 3 27 3 
28 3 28 3 28 4 28 3 28 4 28 4 28 4 28 4 
28 4 28 5 28 4 27 5 28 5 28 5 28 5 28 5 
28 6 28 6 28 6 28 6 28 7 28 7 28 7 28 7 
27 8 28 9 28 8 28 9 28 10 28 10 28 10 28 11 
28 12 28 12 28 13 28 14 27 14 28 16 28 17 28 18 
28 19 28 20 28 22 28 24 28 26 28 29 28 31 28 34 
28 38 27 43 28 48 28 54 28 63 28 73 28 86 28 105 
28 131 28 169 28 232 28 346 28 609 964 1348 198 MP stroke
gr

18 w
c8
  36   36  964 1348 FO
  36   36  992 1957 FO
  36   36 1020 2303 FO
  36   36 1048 2535 FO
  36   36 1076 2704 FO
  36   36 1104 2835 FO
  36   36 1132 2940 FO
  36   36 1160 3026 FO
  36   36 1188 3099 FO
  36   36 1216 3162 FO
  36   36 1244 3216 FO
  36   36 1272 3264 FO
  36   36 1299 3307 FO
  36   36 1327 3345 FO
  36   36 1355 3379 FO
  36   36 1383 3410 FO
  36   36 1411 3439 FO
  36   36 1439 3465 FO
  36   36 1467 3489 FO
  36   36 1495 3511 FO
  36   36 1523 3531 FO
  36   36 1551 3550 FO
  36   36 1579 3568 FO
  36   36 1607 3585 FO
  36   36 1635 3601 FO
  36   36 1662 3615 FO
  36   36 1690 3629 FO
  36   36 1718 3642 FO
  36   36 1746 3654 FO
  36   36 1774 3666 FO
  36   36 1802 3677 FO
  36   36 1830 3687 FO
  36   36 1858 3697 FO
  36   36 1886 3707 FO
  36   36 1914 3716 FO
  36   36 1942 3724 FO
  36   36 1970 3733 FO
  36   36 1997 3741 FO
  36   36 2025 3748 FO
  36   36 2053 3755 FO
  36   36 2081 3762 FO
  36   36 2109 3769 FO
  36   36 2137 3775 FO
  36   36 2165 3781 FO
  36   36 2193 3787 FO
  36   36 2221 3793 FO
  36   36 2249 3798 FO
  36   36 2277 3803 FO
  36   36 2305 3808 FO
  36   36 2333 3813 FO
  36   36 2360 3818 FO
  36   36 2388 3822 FO
  36   36 2416 3827 FO
  36   36 2444 3831 FO
  36   36 2472 3835 FO
  36   36 2500 3839 FO
  36   36 2528 3843 FO
  36   36 2556 3847 FO
  36   36 2584 3850 FO
  36   36 2612 3854 FO
  36   36 2640 3857 FO
  36   36 2668 3860 FO
  36   36 2695 3863 FO
  36   36 2723 3866 FO
  36   36 2751 3869 FO
  36   36 2779 3872 FO
  36   36 2807 3875 FO
  36   36 2835 3878 FO
  36   36 2863 3880 FO
  36   36 2891 3883 FO
  36   36 2919 3886 FO
  36   36 2947 3888 FO
  36   36 2975 3890 FO
  36   36 3003 3893 FO
  36   36 3031 3895 FO
  36   36 3058 3897 FO
  36   36 3086 3899 FO
  36   36 3114 3901 FO
  36   36 3142 3903 FO
  36   36 3170 3905 FO
  36   36 3198 3907 FO
  36   36 3226 3909 FO
  36   36 3254 3911 FO
  36   36 3282 3913 FO
  36   36 3310 3914 FO
  36   36 3338 3916 FO
  36   36 3366 3918 FO
  36   36 3393 3919 FO
  36   36 3421 3921 FO
  36   36 3449 3923 FO
  36   36 3477 3924 FO
  36   36 3505 3926 FO
  36   36 3533 3927 FO
  36   36 3561 3928 FO
  36   36 3589 3930 FO
  36   36 3617 3931 FO
  36   36 3645 3932 FO
  36   36 3673 3934 FO
  36   36 3701 3935 FO
  36   36 3729 3936 FO
  36   36 3756 3937 FO
  36   36 3784 3939 FO
  36   36 3812 3940 FO
  36   36 3840 3941 FO
  36   36 3868 3942 FO
  36   36 3896 3943 FO
  36   36 3924 3944 FO
  36   36 3952 3945 FO
  36   36 3980 3946 FO
  36   36 4008 3947 FO
  36   36 4036 3948 FO
  36   36 4064 3949 FO
  36   36 4091 3950 FO
  36   36 4119 3951 FO
  36   36 4147 3952 FO
  36   36 4175 3953 FO
  36   36 4203 3954 FO
  36   36 4231 3954 FO
  36   36 4259 3955 FO
  36   36 4287 3956 FO
  36   36 4315 3957 FO
  36   36 4343 3958 FO
  36   36 4371 3958 FO
  36   36 4399 3959 FO
  36   36 4427 3960 FO
  36   36 4454 3961 FO
  36   36 4482 3961 FO
  36   36 4510 3962 FO
  36   36 4538 3963 FO
  36   36 4566 3963 FO
  36   36 4594 3964 FO
  36   36 4622 3965 FO
  36   36 4650 3965 FO
  36   36 4678 3966 FO
  36   36 4706 3967 FO
  36   36 4734 3967 FO
  36   36 4762 3968 FO
  36   36 4789 3968 FO
  36   36 4817 3969 FO
  36   36 4845 3970 FO
  36   36 4873 3970 FO
  36   36 4901 3971 FO
  36   36 4929 3971 FO
  36   36 4957 3972 FO
  36   36 4985 3972 FO
  36   36 5013 3973 FO
  36   36 5041 3973 FO
  36   36 5069 3974 FO
  36   36 5097 3974 FO
  36   36 5125 3975 FO
  36   36 5152 3975 FO
  36   36 5180 3976 FO
  36   36 5208 3976 FO
  36   36 5236 3977 FO
  36   36 5264 3977 FO
  36   36 5292 3978 FO
  36   36 5320 3978 FO
  36   36 5348 3978 FO
  36   36 5376 3979 FO
  36   36 5404 3979 FO
  36   36 5432 3980 FO
  36   36 5460 3980 FO
  36   36 5487 3980 FO
  36   36 5515 3981 FO
  36   36 5543 3981 FO
  36   36 5571 3982 FO
  36   36 5599 3982 FO
  36   36 5627 3982 FO
  36   36 5655 3983 FO
  36   36 5683 3983 FO
  36   36 5711 3983 FO
  36   36 5739 3984 FO
  36   36 5767 3984 FO
  36   36 5795 3984 FO
  36   36 5823 3985 FO
  36   36 5850 3985 FO
  36   36 5878 3985 FO
  36   36 5906 3986 FO
  36   36 5934 3986 FO
  36   36 5962 3986 FO
  36   36 5990 3986 FO
  36   36 6018 3987 FO
  36   36 6046 3987 FO
  36   36 6074 3987 FO
  36   36 6102 3988 FO
  36   36 6130 3988 FO
  36   36 6158 3988 FO
  36   36 6185 3988 FO
  36   36 6213 3989 FO
  36   36 6241 3989 FO
  36   36 6269 3989 FO
  36   36 6297 3990 FO
  36   36 6325 3990 FO
  36   36 6353 3990 FO
  36   36 6381 3990 FO
  36   36 6409 3990 FO
  36   36 6437 3991 FO
  36   36 6465 3991 FO
gs 937 338 5585 3670 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2564  229 mt 
(Trend of Loss Function on LPP @ CMU PIE) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

3309 4336 mt 
(Iteration num) s
 535 2900 mt  -90 rotate
(Value of Loss Function) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
