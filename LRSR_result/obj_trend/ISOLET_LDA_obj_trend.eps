%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 10 ×¨Òµ°æ.
%%Title: H:\Workplace\matlab\LRSR_result\obj_trend\ISOLET_LDA_obj_trend.eps
%%CreationDate: 10/20/2017  20:03:48
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    -2   232   598   608
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    -2   232   598   608
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0024 7296 csm

    0     0  7206  4502 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7207 4503 rf
6 w
0 3670 5584 0 0 -3670 937 4007 4 MP
PP
-5584 0 0 3670 5584 0 0 -3670 937 4007 5 MP stroke
4 w
DO
0 sg
 937 4007 mt  937  337 L
 937  337 mt  937  337 L
1495 4007 mt 1495  337 L
1495  337 mt 1495  337 L
2053 4007 mt 2053  337 L
2053  337 mt 2053  337 L
2612 4007 mt 2612  337 L
2612  337 mt 2612  337 L
3170 4007 mt 3170  337 L
3170  337 mt 3170  337 L
3729 4007 mt 3729  337 L
3729  337 mt 3729  337 L
4287 4007 mt 4287  337 L
4287  337 mt 4287  337 L
4845 4007 mt 4845  337 L
4845  337 mt 4845  337 L
5404 4007 mt 5404  337 L
5404  337 mt 5404  337 L
5962 4007 mt 5962  337 L
5962  337 mt 5962  337 L
6521 4007 mt 6521  337 L
6521  337 mt 6521  337 L
 937 3701 mt 6521 3701 L
6521 3701 mt 6521 3701 L
 937 3395 mt 6521 3395 L
6521 3395 mt 6521 3395 L
 937 3089 mt 6521 3089 L
6521 3089 mt 6521 3089 L
 937 2783 mt 6521 2783 L
6521 2783 mt 6521 2783 L
 937 2478 mt 6521 2478 L
6521 2478 mt 6521 2478 L
 937 2172 mt 6521 2172 L
6521 2172 mt 6521 2172 L
 937 1866 mt 6521 1866 L
6521 1866 mt 6521 1866 L
 937 1561 mt 6521 1561 L
6521 1561 mt 6521 1561 L
 937 1255 mt 6521 1255 L
6521 1255 mt 6521 1255 L
 937  949 mt 6521  949 L
6521  949 mt 6521  949 L
 937  643 mt 6521  643 L
6521  643 mt 6521  643 L
SO
6 w
 937  337 mt 6521  337 L
 937 4007 mt 6521 4007 L
6521 4007 mt 6521  337 L
 937 4007 mt  937  337 L
 937 4007 mt 6521 4007 L
 937 4007 mt  937  337 L
 937 4007 mt  937 3951 L
 937  337 mt  937  393 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 897 4175 mt 
(0) s
1495 4007 mt 1495 3951 L
1495  337 mt 1495  393 L
1415 4175 mt 
(20) s
2053 4007 mt 2053 3951 L
2053  337 mt 2053  393 L
1973 4175 mt 
(40) s
2612 4007 mt 2612 3951 L
2612  337 mt 2612  393 L
2532 4175 mt 
(60) s
3170 4007 mt 3170 3951 L
3170  337 mt 3170  393 L
3090 4175 mt 
(80) s
3729 4007 mt 3729 3951 L
3729  337 mt 3729  393 L
3609 4175 mt 
(100) s
4287 4007 mt 4287 3951 L
4287  337 mt 4287  393 L
4167 4175 mt 
(120) s
4845 4007 mt 4845 3951 L
4845  337 mt 4845  393 L
4725 4175 mt 
(140) s
5404 4007 mt 5404 3951 L
5404  337 mt 5404  393 L
5284 4175 mt 
(160) s
5962 4007 mt 5962 3951 L
5962  337 mt 5962  393 L
5842 4175 mt 
(180) s
6521 4007 mt 6521 3951 L
6521  337 mt 6521  393 L
6401 4175 mt 
(200) s
 937 3701 mt  992 3701 L
6521 3701 mt 6465 3701 L
 702 3754 mt 
(9.7) s
 937 3395 mt  992 3395 L
6521 3395 mt 6465 3395 L
 702 3448 mt 
(9.8) s
 937 3089 mt  992 3089 L
6521 3089 mt 6465 3089 L
 702 3142 mt 
(9.9) s
 937 2783 mt  992 2783 L
6521 2783 mt 6465 2783 L
 742 2836 mt 
(10) s
 937 2478 mt  992 2478 L
6521 2478 mt 6465 2478 L
 622 2531 mt 
(10.1) s
 937 2172 mt  992 2172 L
6521 2172 mt 6465 2172 L
 622 2225 mt 
(10.2) s
 937 1866 mt  992 1866 L
6521 1866 mt 6465 1866 L
 622 1919 mt 
(10.3) s
 937 1561 mt  992 1561 L
6521 1561 mt 6465 1561 L
 622 1614 mt 
(10.4) s
 937 1255 mt  992 1255 L
6521 1255 mt 6465 1255 L
 622 1308 mt 
(10.5) s
 937  949 mt  992  949 L
6521  949 mt 6465  949 L
 622 1002 mt 
(10.6) s
 937  643 mt  992  643 L
6521  643 mt 6465  643 L
 622  696 mt 
(10.7) s
 937  337 mt 6521  337 L
 937 4007 mt 6521 4007 L
6521 4007 mt 6521  337 L
 937 4007 mt  937  337 L
gs 937 338 5585 3670 rc
18 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
28 0 28 0 28 0 28 0 28 0 28 0 28 0 28 0 
28 0 28 0 27 0 28 0 28 0 28 0 28 0 28 0 
28 0 28 0 28 0 28 0 28 0 28 0 27 0 28 0 
28 0 28 0 28 0 28 0 28 0 28 0 28 0 28 0 
28 0 28 0 28 0 27 0 28 0 28 0 28 0 28 0 
28 0 28 0 28 0 28 0 28 0 28 0 28 0 27 0 
28 0 28 0 28 0 28 0 28 0 28 0 28 0 28 1 
28 0 28 0 28 0 28 0 27 0 28 0 28 0 28 0 
28 0 28 0 28 0 28 0 28 0 28 0 28 0 28 0 
27 0 28 0 28 0 28 0 28 0 28 1 28 0 28 0 
28 0 28 0 28 0 28 0 28 0 27 0 28 0 28 0 
28 0 28 1 28 0 28 0 28 0 28 0 28 0 28 0 
28 0 27 0 28 1 28 0 28 0 28 0 28 0 28 0 
28 1 28 0 28 0 28 0 28 0 28 0 27 1 28 0 
28 0 28 0 28 1 28 0 28 0 28 0 28 1 28 0 
28 0 28 1 27 0 28 1 28 0 28 0 28 1 28 0 
28 1 28 0 28 1 28 0 28 1 28 0 28 1 27 1 
28 0 28 1 28 1 28 1 28 1 28 1 28 1 28 1 
28 1 28 1 28 1 27 1 28 2 28 1 28 2 28 1 
28 2 28 2 28 2 28 2 28 2 28 2 28 3 28 3 
27 3 28 3 28 3 28 4 28 4 28 4 28 5 28 5 
28 5 28 6 28 7 28 7 27 8 28 9 28 10 28 11 
28 13 28 13 28 16 28 18 28 20 28 24 28 27 28 31 
28 38 27 44 28 53 28 63 28 79 28 97 28 123 28 159 
28 210 28 286 28 411 28 636 28 1143 964 356 198 MP stroke
gr

18 w
c8
  36   36  964  356 FO
  36   36  992 1499 FO
  36   36 1020 2135 FO
  36   36 1048 2546 FO
  36   36 1076 2832 FO
  36   36 1104 3042 FO
  36   36 1132 3201 FO
  36   36 1160 3324 FO
  36   36 1188 3421 FO
  36   36 1216 3500 FO
  36   36 1244 3563 FO
  36   36 1272 3616 FO
  36   36 1299 3660 FO
  36   36 1327 3698 FO
  36   36 1355 3729 FO
  36   36 1383 3756 FO
  36   36 1411 3780 FO
  36   36 1439 3800 FO
  36   36 1467 3818 FO
  36   36 1495 3834 FO
  36   36 1523 3847 FO
  36   36 1551 3860 FO
  36   36 1579 3871 FO
  36   36 1607 3881 FO
  36   36 1635 3890 FO
  36   36 1662 3898 FO
  36   36 1690 3905 FO
  36   36 1718 3912 FO
  36   36 1746 3918 FO
  36   36 1774 3923 FO
  36   36 1802 3928 FO
  36   36 1830 3933 FO
  36   36 1858 3937 FO
  36   36 1886 3941 FO
  36   36 1914 3945 FO
  36   36 1942 3948 FO
  36   36 1970 3951 FO
  36   36 1997 3954 FO
  36   36 2025 3957 FO
  36   36 2053 3960 FO
  36   36 2081 3962 FO
  36   36 2109 3964 FO
  36   36 2137 3966 FO
  36   36 2165 3968 FO
  36   36 2193 3970 FO
  36   36 2221 3972 FO
  36   36 2249 3973 FO
  36   36 2277 3975 FO
  36   36 2305 3976 FO
  36   36 2333 3978 FO
  36   36 2360 3979 FO
  36   36 2388 3980 FO
  36   36 2416 3981 FO
  36   36 2444 3982 FO
  36   36 2472 3983 FO
  36   36 2500 3984 FO
  36   36 2528 3985 FO
  36   36 2556 3986 FO
  36   36 2584 3987 FO
  36   36 2612 3988 FO
  36   36 2640 3989 FO
  36   36 2668 3989 FO
  36   36 2695 3990 FO
  36   36 2723 3991 FO
  36   36 2751 3991 FO
  36   36 2779 3992 FO
  36   36 2807 3992 FO
  36   36 2835 3993 FO
  36   36 2863 3993 FO
  36   36 2891 3994 FO
  36   36 2919 3994 FO
  36   36 2947 3995 FO
  36   36 2975 3995 FO
  36   36 3003 3995 FO
  36   36 3031 3996 FO
  36   36 3058 3996 FO
  36   36 3086 3997 FO
  36   36 3114 3997 FO
  36   36 3142 3997 FO
  36   36 3170 3998 FO
  36   36 3198 3998 FO
  36   36 3226 3998 FO
  36   36 3254 3998 FO
  36   36 3282 3999 FO
  36   36 3310 3999 FO
  36   36 3338 3999 FO
  36   36 3366 3999 FO
  36   36 3393 4000 FO
  36   36 3421 4000 FO
  36   36 3449 4000 FO
  36   36 3477 4000 FO
  36   36 3505 4000 FO
  36   36 3533 4000 FO
  36   36 3561 4001 FO
  36   36 3589 4001 FO
  36   36 3617 4001 FO
  36   36 3645 4001 FO
  36   36 3673 4001 FO
  36   36 3701 4001 FO
  36   36 3729 4002 FO
  36   36 3756 4002 FO
  36   36 3784 4002 FO
  36   36 3812 4002 FO
  36   36 3840 4002 FO
  36   36 3868 4002 FO
  36   36 3896 4002 FO
  36   36 3924 4002 FO
  36   36 3952 4002 FO
  36   36 3980 4003 FO
  36   36 4008 4003 FO
  36   36 4036 4003 FO
  36   36 4064 4003 FO
  36   36 4091 4003 FO
  36   36 4119 4003 FO
  36   36 4147 4003 FO
  36   36 4175 4003 FO
  36   36 4203 4003 FO
  36   36 4231 4003 FO
  36   36 4259 4003 FO
  36   36 4287 4003 FO
  36   36 4315 4004 FO
  36   36 4343 4004 FO
  36   36 4371 4004 FO
  36   36 4399 4004 FO
  36   36 4427 4004 FO
  36   36 4454 4004 FO
  36   36 4482 4004 FO
  36   36 4510 4004 FO
  36   36 4538 4004 FO
  36   36 4566 4004 FO
  36   36 4594 4004 FO
  36   36 4622 4004 FO
  36   36 4650 4004 FO
  36   36 4678 4004 FO
  36   36 4706 4004 FO
  36   36 4734 4004 FO
  36   36 4762 4004 FO
  36   36 4789 4004 FO
  36   36 4817 4004 FO
  36   36 4845 4004 FO
  36   36 4873 4004 FO
  36   36 4901 4004 FO
  36   36 4929 4005 FO
  36   36 4957 4005 FO
  36   36 4985 4005 FO
  36   36 5013 4005 FO
  36   36 5041 4005 FO
  36   36 5069 4005 FO
  36   36 5097 4005 FO
  36   36 5125 4005 FO
  36   36 5152 4005 FO
  36   36 5180 4005 FO
  36   36 5208 4005 FO
  36   36 5236 4005 FO
  36   36 5264 4005 FO
  36   36 5292 4005 FO
  36   36 5320 4005 FO
  36   36 5348 4005 FO
  36   36 5376 4005 FO
  36   36 5404 4005 FO
  36   36 5432 4005 FO
  36   36 5460 4005 FO
  36   36 5487 4005 FO
  36   36 5515 4005 FO
  36   36 5543 4005 FO
  36   36 5571 4005 FO
  36   36 5599 4005 FO
  36   36 5627 4005 FO
  36   36 5655 4005 FO
  36   36 5683 4005 FO
  36   36 5711 4005 FO
  36   36 5739 4005 FO
  36   36 5767 4005 FO
  36   36 5795 4005 FO
  36   36 5823 4005 FO
  36   36 5850 4005 FO
  36   36 5878 4005 FO
  36   36 5906 4005 FO
  36   36 5934 4005 FO
  36   36 5962 4005 FO
  36   36 5990 4005 FO
  36   36 6018 4005 FO
  36   36 6046 4005 FO
  36   36 6074 4005 FO
  36   36 6102 4005 FO
  36   36 6130 4005 FO
  36   36 6158 4005 FO
  36   36 6185 4005 FO
  36   36 6213 4005 FO
  36   36 6241 4005 FO
  36   36 6269 4005 FO
  36   36 6297 4005 FO
  36   36 6325 4005 FO
  36   36 6353 4005 FO
  36   36 6381 4005 FO
  36   36 6409 4005 FO
  36   36 6437 4005 FO
  36   36 6465 4005 FO
gs 937 338 5585 3670 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2600  229 mt 
(Trend of Loss Function on LDA @ ISOLET) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

3309 4336 mt 
(Iteration num) s
 535 2900 mt  -90 rotate
(Value of Loss Function) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
