%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 10 ×¨Òµ°æ.
%%Title: H:\Workplace\matlab\LRSR_result\obj_trend\ISOLET_LPP_obj_trend.eps
%%CreationDate: 10/20/2017  20:03:27
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    -2   236   598   606
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    -2   236   598   606
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0024 7272 csm

    0     0  7206  4439 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7207 4440 rf
6 w
0 3618 5584 0 0 -3618 937 3951 4 MP
PP
-5584 0 0 3618 5584 0 0 -3618 937 3951 5 MP stroke
4 w
DO
0 sg
 937 3951 mt  937  333 L
 937  333 mt  937  333 L
1495 3951 mt 1495  333 L
1495  333 mt 1495  333 L
2053 3951 mt 2053  333 L
2053  333 mt 2053  333 L
2612 3951 mt 2612  333 L
2612  333 mt 2612  333 L
3170 3951 mt 3170  333 L
3170  333 mt 3170  333 L
3729 3951 mt 3729  333 L
3729  333 mt 3729  333 L
4287 3951 mt 4287  333 L
4287  333 mt 4287  333 L
4845 3951 mt 4845  333 L
4845  333 mt 4845  333 L
5404 3951 mt 5404  333 L
5404  333 mt 5404  333 L
5962 3951 mt 5962  333 L
5962  333 mt 5962  333 L
6521 3951 mt 6521  333 L
6521  333 mt 6521  333 L
 937 3951 mt 6521 3951 L
6521 3951 mt 6521 3951 L
 937 3227 mt 6521 3227 L
6521 3227 mt 6521 3227 L
 937 2503 mt 6521 2503 L
6521 2503 mt 6521 2503 L
 937 1780 mt 6521 1780 L
6521 1780 mt 6521 1780 L
 937 1056 mt 6521 1056 L
6521 1056 mt 6521 1056 L
 937  333 mt 6521  333 L
6521  333 mt 6521  333 L
SO
6 w
 937  333 mt 6521  333 L
 937 3951 mt 6521 3951 L
6521 3951 mt 6521  333 L
 937 3951 mt  937  333 L
 937 3951 mt 6521 3951 L
 937 3951 mt  937  333 L
 937 3951 mt  937 3895 L
 937  333 mt  937  388 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 897 4119 mt 
(0) s
1495 3951 mt 1495 3895 L
1495  333 mt 1495  388 L
1415 4119 mt 
(10) s
2053 3951 mt 2053 3895 L
2053  333 mt 2053  388 L
1973 4119 mt 
(20) s
2612 3951 mt 2612 3895 L
2612  333 mt 2612  388 L
2532 4119 mt 
(30) s
3170 3951 mt 3170 3895 L
3170  333 mt 3170  388 L
3090 4119 mt 
(40) s
3729 3951 mt 3729 3895 L
3729  333 mt 3729  388 L
3649 4119 mt 
(50) s
4287 3951 mt 4287 3895 L
4287  333 mt 4287  388 L
4207 4119 mt 
(60) s
4845 3951 mt 4845 3895 L
4845  333 mt 4845  388 L
4765 4119 mt 
(70) s
5404 3951 mt 5404 3895 L
5404  333 mt 5404  388 L
5324 4119 mt 
(80) s
5962 3951 mt 5962 3895 L
5962  333 mt 5962  388 L
5882 4119 mt 
(90) s
6521 3951 mt 6521 3895 L
6521  333 mt 6521  388 L
6401 4119 mt 
(100) s
 937 3951 mt  992 3951 L
6521 3951 mt 6465 3951 L
 622 4004 mt 
(1.35) s
 937 3227 mt  992 3227 L
6521 3227 mt 6465 3227 L
 702 3280 mt 
(1.4) s
 937 2503 mt  992 2503 L
6521 2503 mt 6465 2503 L
 622 2556 mt 
(1.45) s
 937 1780 mt  992 1780 L
6521 1780 mt 6465 1780 L
 702 1833 mt 
(1.5) s
 937 1056 mt  992 1056 L
6521 1056 mt 6465 1056 L
 622 1109 mt 
(1.55) s
 937  333 mt  992  333 L
6521  333 mt 6465  333 L
 702  386 mt 
(1.6) s
 937  333 mt 6521  333 L
 937 3951 mt 6521 3951 L
6521 3951 mt 6521  333 L
 937 3951 mt  937  333 L
gs 937 333 5585 3619 rc
18 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
56 0 56 0 56 0 56 0 56 0 55 0 56 0 56 0 
56 0 56 0 56 0 55 0 56 0 56 0 56 1 56 0 
56 0 55 0 56 0 56 0 56 0 56 0 56 0 55 0 
56 0 56 0 56 0 56 0 56 0 56 0 55 1 56 0 
56 0 56 0 56 0 56 0 55 0 56 0 56 1 56 0 
56 0 56 0 55 0 56 1 56 0 56 0 56 0 56 1 
55 0 56 0 56 1 56 0 56 0 56 1 56 0 55 1 
56 1 56 0 56 1 56 1 56 0 55 1 56 1 56 1 
56 1 56 2 56 1 55 2 56 1 56 2 56 2 56 2 
56 3 55 3 56 3 56 4 56 4 56 5 56 5 56 6 
55 8 56 8 56 10 56 12 56 15 56 17 55 22 56 27 
56 34 56 45 56 59 56 81 55 112 56 160 56 238 56 365 
56 601 56 1188 992 648 99 MP stroke
gr

18 w
c8
  36   36  992  648 FO
  36   36 1048 1836 FO
  36   36 1104 2437 FO
  36   36 1160 2802 FO
  36   36 1216 3040 FO
  36   36 1272 3200 FO
  36   36 1327 3312 FO
  36   36 1383 3393 FO
  36   36 1439 3452 FO
  36   36 1495 3497 FO
  36   36 1551 3531 FO
  36   36 1607 3558 FO
  36   36 1662 3580 FO
  36   36 1718 3597 FO
  36   36 1774 3612 FO
  36   36 1830 3624 FO
  36   36 1886 3634 FO
  36   36 1942 3642 FO
  36   36 1997 3650 FO
  36   36 2053 3656 FO
  36   36 2109 3661 FO
  36   36 2165 3666 FO
  36   36 2221 3670 FO
  36   36 2277 3674 FO
  36   36 2333 3677 FO
  36   36 2388 3680 FO
  36   36 2444 3683 FO
  36   36 2500 3685 FO
  36   36 2556 3687 FO
  36   36 2612 3689 FO
  36   36 2668 3690 FO
  36   36 2723 3692 FO
  36   36 2779 3693 FO
  36   36 2835 3695 FO
  36   36 2891 3696 FO
  36   36 2947 3697 FO
  36   36 3003 3698 FO
  36   36 3058 3699 FO
  36   36 3114 3699 FO
  36   36 3170 3700 FO
  36   36 3226 3701 FO
  36   36 3282 3701 FO
  36   36 3338 3702 FO
  36   36 3393 3703 FO
  36   36 3449 3703 FO
  36   36 3505 3704 FO
  36   36 3561 3704 FO
  36   36 3617 3704 FO
  36   36 3673 3705 FO
  36   36 3729 3705 FO
  36   36 3784 3705 FO
  36   36 3840 3706 FO
  36   36 3896 3706 FO
  36   36 3952 3706 FO
  36   36 4008 3706 FO
  36   36 4064 3707 FO
  36   36 4119 3707 FO
  36   36 4175 3707 FO
  36   36 4231 3707 FO
  36   36 4287 3707 FO
  36   36 4343 3708 FO
  36   36 4399 3708 FO
  36   36 4454 3708 FO
  36   36 4510 3708 FO
  36   36 4566 3708 FO
  36   36 4622 3708 FO
  36   36 4678 3708 FO
  36   36 4734 3708 FO
  36   36 4789 3709 FO
  36   36 4845 3709 FO
  36   36 4901 3709 FO
  36   36 4957 3709 FO
  36   36 5013 3709 FO
  36   36 5069 3709 FO
  36   36 5125 3709 FO
  36   36 5180 3709 FO
  36   36 5236 3709 FO
  36   36 5292 3709 FO
  36   36 5348 3709 FO
  36   36 5404 3709 FO
  36   36 5460 3709 FO
  36   36 5515 3709 FO
  36   36 5571 3709 FO
  36   36 5627 3709 FO
  36   36 5683 3710 FO
  36   36 5739 3710 FO
  36   36 5795 3710 FO
  36   36 5850 3710 FO
  36   36 5906 3710 FO
  36   36 5962 3710 FO
  36   36 6018 3710 FO
  36   36 6074 3710 FO
  36   36 6130 3710 FO
  36   36 6185 3710 FO
  36   36 6241 3710 FO
  36   36 6297 3710 FO
  36   36 6353 3710 FO
  36   36 6409 3710 FO
  36   36 6465 3710 FO
gs 937 333 5585 3619 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2600  224 mt 
(Trend of Loss Function on LPP @ ISOLET) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

3309 4280 mt 
(Iteration num) s
 535 2870 mt  -90 rotate
(Value of Loss Function) s
90 rotate
6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
